#!/bin/csh -f
#
# PTON2MARK DDD YY, e.g. PTON2MARK 189 2019
#
# Converts PTON weatherstation data to post it publicly on the Web.
# Converts SBF external-sensor binaries t oASCII and then to MRK, the
# format liked by Adam Wolf for intercomparison with the Arable Mark.
# This needs to be done on a machine where BIN2ASC is operational.
#
# See https://kb.unavco.org/kb/print-840.html 
# Uses standard Unix tools and RxTools/timeconv
#
# Last modified by fjsimons-at-alum.mit.edu, 07/30/2019

if($#argv < 1)then
  echo ' '
  echo 'Two input arguments expected:'
  echo '----------> Julian day, e.g. 197 (for July 16)... see juliantoday.pl'
  echo '----------> Calendar year, e.g. 2019'
  echo ' '
  goto label999
endif

# Take the Julian day and two/four-digit year from the input
set DDD = $1
set YYYY = $2
set YY = `echo $YYYY-2000 | bc`

# Find where the file is, depends on the host machine
if ($HOST == cressida.princeton.edu) then
  set diro = /home/fjsimons/PTONcGPS
endif

# Set file name, origin and destination folder
set fil1 = pton{$DDD}0.{$YY}_
set orig = ExtData
set dest = WeatherData/$YYYY

# After file conversion you WILL get this whole new filename
set fil2 = pton{$DDD}0.{$YY}__SBF_ASCIIIn.txt
    
# Now convert the file from SBF binary to ASCII 
echo $diro/$dest/$fil2
# You might have made it before... don't redo it if you have
test ! -f $diro/$dest/$fil2 \
    && /opt/Septentrio/RxTools/bin/bin2asc -t -m ASCIIIn -f $diro/$orig/$fil1 -p $diro/$dest

# These are the header variables that you expect in those files
set headerline = 'Timestamp MeanWindDirection_deg MeanWindSpeed_mps AirTemp_C RelHum AirPress_bar RainAcc_mm HailAcc_hits'

# Process the weather file name, change SBF to ASC and make new extension MRK
set newfile = `echo $fil2 | sed 's/SBF/ASC/g'` 
set tempfl1 =  $newfile:r.tmp1
set tempfl2 =  $newfile:r.tmp2
set newfile =  $newfile:r.mrk
echo Attempting to convert $fil2 to $newfile

# Convert the time stamp by extracting the first two columns... convert to milliseconds by nixing the period... write to tempfile
awk 'NR>2 {print}' $diro/$dest/$fil2 | sed 's/\.//g' | sed 's/[,=]/ /g' \
   | awk '{printf "timeconv -t %s -w %s | grep UTC | awk '\''{print $5\"Z\"}'\'' | sed '\''s/-/T/g'\'' | sed '\''s/\\//-/g'\''\n",$1,$2}' \
   >! $tempfl1
# Make temp file executable and then execute it, which makes another timefile
/bin/chmod +x $tempfl1
./$tempfl1 >! $tempfl2
# Work on the remaining columns, which contains the weather string, which we strip of units and so on... write to tempfile
awk 'NR>2 {print}' $diro/$dest/$fil2 | sed 's/[,=]/ /g' | sed 's/[C,D,M,P,B,M]//g' \
  | awk '{printf "%s %s %s %s %s %s %s\n",$7,$9,$11,$13,$15,$17,$19}' >! $tempfl1
# Make a final file by concatenating a header line with the time stamp and the weather string from the two temp files
echo $headerline >! $diro/$dest/$newfile
paste $tempfl2 $tempfl1 | awk '{printf "%s %s %s %s %s %s %s %s %s\n",$1,$2,$3,$4,$5,$6,$7,$8,$9}'  >> $diro/$dest/$newfile
/bin/rm $tempfl2 $tempfl1

# Put this one file on the Web
# If will be donibg that using rsync
scp $diro/$dest/$newfile fjsimons@geoweb.princeton.edu:/home/www/people/simons/PTON
#rsync -ve "ssh -i /u/fjsimons/.ssh/id_remote_backup" $newfile   fjsimons@geoweb.princeton.edu:

# Flow control
label999:

############## File Format Documentation ##########################################
# Every file begins with the two header lines,
# TOW [s],WNc [w],CD,StringLn,ASCIIString
# ---------------------------------------
# and then the data themselves, i.e.
# TOW [s] Time of Week, seconds
# WNc [w] GPS Week number 
# COM port, a number, the 0R0 command code, and then met pack weather string:
# Dm=076D,Sm=0.1M,Ta=24.4C,Ua=20.9P,Pa=0.8429B,Rc=0.00M,Hc=0.0M
#
#  Dm - wind direction, degrees
#  Sm - wind speed, m/s
#  Ta - temperature, degree C
#  Ua - humidity, percent
#  Pa - barometric pressure, Bar
#  Rc - rainfall, mm/sampling period (reset at each measurement)
#  Hc - hail, hits/sampling period (reset at each measurement)
 ########################################## ##########################################
